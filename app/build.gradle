apply plugin: 'com.android.application'
def supportVersion = "25.0.0"
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.wuxiaolong.gradle4android"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode 1
        versionName "1.0"
        buildConfigField 'String', 'API_SERVER_URL', '"http://wuxiaolong.me/"'
    }
    signingConfigs {//签名的配置
        release {
            storeFile file('WuXiaolong.jks')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
        debug {
            storeFile file('WuXiaolong.jks')
            storePassword 'android'
            keyAlias 'android'
            keyPassword 'android'
        }
    }
    buildTypes {
        release {
            minifyEnabled false//是否启动混淆
            zipAlignEnabled false//是否启动zipAlign
            shrinkResources false // 是否移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//打包命令行：gradlew assembleRelease
            applicationVariants.all { variant ->
                if (variant.buildType.name == 'release') {
                    variant.outputs.all {
                        def apkName = "gradle4android_v${variant.versionName}"
                        if (!variant.flavorName.isEmpty()) {
                            apkName += "_${variant.flavorName}"
                        }
                        outputFileName = apkName + "_${releaseTime()}.apk"
                    }
                }
            }
            //针对很多渠道
            productFlavors.all { flavor ->
                manifestPlaceholders.put("UMENG_CHANNEL_VALUE", name)
            }
        }
    }
    flavorDimensions 'tier'
    productFlavors {
        //多渠道打包，命令行打包：gradlew assembleRelease
        debugServer {
            dimension 'tier'
            buildConfigField 'String', 'API_SERVER_URL', '"我的公众号：吴小龙同学"'
        }

        releaseServer {
            dimension 'tier'
            buildConfigField 'String', 'API_SERVER_URL', '"http://wuxiaolong.me/"'
        }

        xiaomi {
            dimension 'tier'
            applicationId 'com.wuxiaolong.gradle4android1'
        }

        googlepaly {
            dimension 'tier'
            applicationId 'com.wuxiaolong.gradle4android2'
        }
    }
    lintOptions {
        //设置编译的lint开关，程序在buid的时候，会执行lint检查，有任何的错误或者警告提示，都会终止构建
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:' + supportVersion
    compile rootProject.ext.dependencies["design"]

}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

